# base image
FROM nvidia/cuda:11.7.0-runtime-ubuntu22.04

ENV DEBIAN_FRONTEND noninteractive
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

# install system dependencies
RUN apt-get -y update \
 && apt-get -y install apt-utils \
 && apt-get -y dist-upgrade \
 && apt-get -y install \
    sudo netcat \
    build-essential git libssl-dev zlib1g-dev libbz2-dev libreadline-dev \
    libsqlite3-dev wget curl llvm libncurses5-dev libncursesw5-dev \
    xz-utils tk-dev libffi-dev liblzma-dev \
    libpq-dev supervisor \
 && apt-get -y autoclean \
 && apt-get -y autoremove --purge \
 && rm -rf /var/lib/apt/lists/*
 
# docker user setting
ARG USERNAME=jheepuser
ARG USERID=1000
ARG GROUPID=1000

RUN groupadd -f -g ${GROUPID} ${USERNAME} \
 && useradd -u ${USERID} -g ${GROUPID} -G sudo -m -s /bin/bash ${USERNAME} \
 && echo "${USERNAME} ALL=(ALL) NOPASSWD: ALL" > /etc/sudoers.d/${USERNAME} \
 && echo "Customized the sudoers file for passwordless access to the ${USERNAME} user!" \
 && su - ${USERNAME} -c id
 
USER ${USERNAME}
ENV HOME=/home/${USERNAME}
WORKDIR ${HOME}

RUN mkdir -p ${HOME}/.local/bin ${HOME}/.local/lib \
 && sudo chown -R ${USERID}:${GROUPID} ${HOME}/.local
 
# pyenv setting
ARG JHEEP_VERSION
ARG SETTINGS_PATH .docker/.settings
ARG PYTHON_VERSION=3.10.5

RUN curl https://pyenv.run | bash \
 && sed -i '/^#umask.*/a export PYENV_ROOT="$HOME/.pyenv"\nexport PATH="$PYENV_ROOT/bin:$PATH"\neval "$(pyenv init --path)"' ${HOME}/.profile \
 && printf '\nexport PYTHON_CONFIGURE_OPTS="--enable-shared"\neval "$(pyenv init -)"\nset -o vi' >> ${HOME}/.bashrc

ENV PYENV_ROOT=${HOME}/.pyenv
ENV PYENV_VERION=${PYTHON_VERSION}
ENV PATH=${PYENV_ROOT}/shims:${PYENV_ROOT}/bin:${HOME}/.local/bin:${PATH}
#ENV PYTHONPATH=${HOME}/.local/lib/python3.10/site-packages:/usr/lib/python3/dist-packages:${PYTHONPATH}

RUN pyenv update \
 && pyenv install ${PYTHON_VERSION} \
 && pyenv global ${PYTHON_VERSION}
 
RUN mkdir -p ${HOME}/.pip \
 && sudo chown -R ${USERID}:${GROUPID} ${HOME}/.pip
COPY --chown=${USERID}:${GROUPID} ${SETTINGS_PATH}/pip.conf ${HOME}/.pip/pip.conf
RUN pip install --upgrade pip 

# install pypi
RUN pip install --upgrade ipython jupyterlab

RUN mkdir -p ${HOME}/.ipython/profile_default
RUN sudo chown -R ${USERID}:${GROUPID} ${HOME}/.ipython
COPY --chown=${USERID}:${GROUPID} ${SETTINGS_PATH}/ipython_config.py ${HOME}/.ipython/profile_default/ipython_config.py

RUN mkdir -p ${HOME}/.jupyter/lab/user-settings
RUN sudo chown -R ${USERID}:${GROUPID} ${HOME}/.jupyter
COPY --chown=${USERID}:${GROUPID} ${SETTINGS_PATH}/jupyter_server_config.py ${HOME}/.jupyter/jupyter_server_config.py

# set working directory
ENV BACK_APP_DIR /backend
WORKDIR ${BACK_APP_DIR}

#COPY ./requirements.txt ${BACK_APP_DIR}
#RUN pip install -U -r ${BACK_APP_DIR}/requirements.txt
COPY . ${BACK_APP_DIR}
RUN pip install -U -e .

# entrypoint
#ENTRYPOINT jheep run
COPY ${SETTINGS_PATH}/supervisord.worker.conf /etc/supervisord.conf
CMD ["supervisord", "-c", "/etc/supervisord.conf"]
